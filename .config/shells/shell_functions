# Common shell functions

# Quick backup of file
function bak() {
    cp "${1}" "${1}.bak"
}

# Create a directory then enter it.
function mkcd() {
	mkdir "${1}" && cd "${1}"
}

# cd up the specified number of directories.
function up() {
    i="${1}"
    while [[ "$i" -gt 0 ]]; do
        cd ..
        i=$(($i-1))
    done
}

# cd to the ancestral directory of the given name (non-greedily).
# Ex: if PWD is ~/src/myproject/source/myproject/mymodule, then "goto myproject"
#    will cd to ~/src/myproject/source/myproject.
#    "goto myproject" again will cd to ~/src/myproject.
function cto() {
    if [[ "$(pwd)" =~ ${1}$ ]]; then
        cd ../
        cto "${1}"
    else
        P="$(pwd)"
        cd "${P%${1}*}/${1}"
    fi
}

# Search for packages when I'm certain I somewhat know the name.
function showp() {
    if command -v apt-cache; then
        apt-cache search ^$1
    elif command -v yum; then
        yum list $1\*
    elif command -v dnf; then
        yum list $1\*
    elif command -v pacman; then
        pacman -Ss '^$1'
    fi
}

# From https://github.com/rkirti/bashrc/blob/24fed1997a93da96ab402f68ed0bda9412e0dd10/.shells/functions#L25
function extract() {
    if [ ! -f $1 ]; then
        echo "'$1' is not a valid file"
        return
    fi

    case $1 in
        *.tar.bz2)  tar xjf $1;;
        *.tar.gz)   tar xzf $1;;
        *.bz2)      bunzip2 $1;;
        *.rar)      rar x $1;;
        *.gz)       gunzip $1;;
        *.tar)      tar xf $1;;
        *.tbz2)     tar xjf $1;;
        *.tgz)      tar xzf $1;;
        *.zip)      unzip $1;;
        *.Z)        uncompress $1;;
        *)          echo "'$1' cannot be extracted via extract()";;
    esac
}

# Open PDFs in the terminal.
function pdf() {
    pdftoroff -w "${1}" | w3m -dump -T text/html | less
}

# i3status-rust integration for the cmus music player.
function cmus() {
    /usr/bin/cmus "$@"
    echo '' > ~/.cache/cmus_playing.txt
    /bin/kill -s RTMIN+1 i3status-rs
}
